@* Удалите этот раздел при использовании пакетного режима *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Зарегистрироваться";

    // Инициализировать общие переменные страницы
    var email = "";
    var password = "";
    var confirmPassword = "";

    // Настройка проверки
    Validation.RequireField("email", "Поле электронной почты заполнять обязательно.");
    Validation.RequireField("password", "Пароль не может быть пустым.");
    Validation.Add("confirmPassword",
        Validator.EqualsTo("password", "Пароль и его подтверждение не совпадают."));
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Пароль не может быть короче 6 символов"));

    // Если это запрос POST , проверяем и обрабатываем данные
    if (IsPost) {
        AntiForgery.Validate();
        email = Request.Form["email"];
        password = Request.Form["password"];
        confirmPassword = Request.Form["confirmPassword"];

        // Проверка символов, вводимых пользователем в ответ на запрос CAPTCHA
        // if (!ReCaptcha.Validate("PRIVATE_KEY")) {
        //     ModelState.AddError("recaptcha", "Неправильный ответ CAPTCHA");
        // }

        // Если все сведения указаны правильно, создается учетная запись
        if (Validation.IsValid()) {
            // Добавление нового пользователя в базу данных
            var db = Database.Open("StarterSite");

            // Проверка наличия пользователя в базе данных
            var user = db.QuerySingle("SELECT Email FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", email);
            if (user == null) {
                // Добавление адреса электронной почты в таблицу профиля
                db.Execute("INSERT INTO UserProfile (Email) VALUES (@0)", email);

                // Создание новой записи в базе данных членства.
                // Если проверка пройдена, обработка запроса продолжается
                try {
                    bool requireEmailConfirmation = !WebMail.SmtpServer.IsEmpty();
                    var token = WebSecurity.CreateAccount(email, password, requireEmailConfirmation);
                    if (requireEmailConfirmation) {
                        var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
                        var confirmationUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Account/Confirm?confirmationCode=" + HttpUtility.UrlEncode(token));

                        WebMail.Send(
                            to: email,
                            subject: "Подтвердите учетную запись",
                            body: "Ваш код подтверждения:: " + token + ". Visit <a href=\"" + confirmationUrl + "\">" + confirmationUrl + "</a>  ."
                        );
                    }

                    if (requireEmailConfirmation) {
                        // Выражение благодарности за регистрацию и напоминание о письме, отправленном по указанному адресу
                        Response.Redirect("~/Account/Thanks");
                    } else {
                        // Переход на домашнюю страницу и выход
                        WebSecurity.Login(email, password);

                        Response.Redirect("~/");
                    }
                } catch (System.Web.Security.MembershipCreateUserException e) {
                    ModelState.AddFormError(e.Message);
                }
            } else {
                // Пользователь уже существует
                ModelState.AddFormError("Email address is already in use.");
            }
        }
    }
}

<hgroup class="title">
    <h1>@Page.Title.</h1>
    <h2>Создание новой учетной записи.</h2>
</hgroup>

<form method="post">
    @AntiForgery.GetHtml()
    @* Уведомлять пользователя при наличии хотя бы одной ошибки проверки *@
    @Html.ValidationSummary("Не удалось создать учетную запись. Исправьте ошибки и повторите попытку.", excludeFieldErrors: true, htmlAttributes: null)

    <fieldset>
        <legend>Форма регистрации</legend>
        <ol>
            <li class="email">
                <label for="email" @if(!ModelState.IsValidField("email")){<text>class="error-label"</text>}>Адрес электронной почты</label>
                <input type="text" id="email" name="email" value="@email" @Validation.For("email") />
                @* Записать все ошибки проверки адреса электронной почты на странице *@
                @Html.ValidationMessage("email")
            </li>
            <li class="password">
                <label for="password" @if(!ModelState.IsValidField("password")) {<text>class="error-label"</text>}>Пароль</label>
                <input type="password" id="password" name="password" @Validation.For("password") />
                @* Записать все ошибки проверки пароля на странице *@
                @Html.ValidationMessage("password")
            </li>
            <li class="confirm-password">
                <label for="confirmPassword" @if(!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>Подтверждение пароля</label>
                <input type="password" id="confirmPassword" name="confirmPassword" @Validation.For("confirmPassword") />
                @* Записать все ошибки проверки пароля на странице *@
                @Html.ValidationMessage("confirmPassword")
            </li>
            <li class="recaptcha">
                <div class="message-info">
                    <p>
                        Чтобы включить проверку CAPTCHA , <a href="http://go.microsoft.com/fwlink/?LinkId=204140">установите 
                        ASP.NET Web Helpers Library</a> , раскомментируйте ReCaptcha.GetHtml и замените 'PUBLIC_KEY'
                        на свой открытый ключ. Раскомментируйте в верхней части страницы ReCaptcha. Validate и
                        замените 'PRIVATE_KEY' на свой закрытый ключ.
                        Зарегистрируйте ключи reCAPTCHA на сайте <a href="http://recaptcha.net">reCAPTCHA.net</a>.
                    </p>
                </div>
                @*
                @ReCaptcha.GetHtml("PUBLIC_KEY", theme: "white")
                @Html.ValidationMessage("recaptcha")
                *@
            </li>
        </ol>
        <input type="submit" value="Регистрация" />
    </fieldset>
</form>